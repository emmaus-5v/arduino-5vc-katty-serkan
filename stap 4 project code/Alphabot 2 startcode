/*****************************************
   variabelen waarvan je gebruik maakt
 *****************************************/
// gebruikte pinnen
#define PWMA   6           //Linker motor snelheid pin (ENA)
#define AIN2   A0          //Motor Links naar voren (IN2).
#define AIN1   A1          //Motor links naar achteren (IN1)
#define PWMB   5           //Rechter motor snelheid pin (ENB)
#define BIN1   A2          //Motor rechts naar voren (IN3)
#define BIN2   A3          //Motor rechts naar achter (IN4)
#define ECHO   2           //Ultrasonische ontvanger pin   
#define TRIG   3           //Ultrasonische uitzender pin

// declareren variabelen pins
const int PWMA   6           //Linker motor snelheid pin (ENA)
const int AIN2   A0          //Motor links naar voren (IN2).
const int AIN1   A1          //Motor links naar achteren(IN1)
const int PWMB   5           //Rechter motor snelheid pin (ENB)
const int BIN1   A2          //Motor rechts naar voren (IN3)
const int BIN2   A3          //Motor rechts naar achteren (IN4)
const int ECHO   2           //Ultrasonische ontvanger pin
const int TRIG   3           //Ultrasonishce uitzender pin

const int pinMotorSnelheidL = 6; //motor links PWMA
const int pinMotorSnelheidR = 5; //motor rechts PWMB

// variabelen om waarden van sensoren en actuatoren te onthouden
int snelheidR = 0;
int  snelheidL = 0;

//variabele toestand maken
var toestand = 0;

// variabelen voor de toestanden maken 
// toestanden:

const int START = 1;
const int EINDE = 2;
const int RIJDEN = 3;
const int STOPPEN = 4;
const int DRAAIEN = 5;
const int UIT = 6;

//zet begintoestand
toestand = UIT;

/*****************************************
   functies waarvan je gebruik maakt
 *****************************************/
 
//Afstand meten 
int AfstandTest()        {
  digitalWrite(TRIG, LOW);   // set trig pin low 2μs
  delayMicroseconds(2);
  digitalWrite(TRIG, HIGH);  // set trig pin 10μs , at last 10us 
  delayMicroseconds(10);
  digitalWrite(TRIG, LOW);    // set trig pin low
  float Fdistance = pulseIn(ECHO, HIGH);  // Read echo pin high level time(us)
  Fdistance= Fdistance/58;       //Y m=（X s*344）/2
  // X s=（ 2*Y m）/344 ==》X s=0.0058*Y m ==》cm = us /58       
  return (int)Fdistance;
} 

/*****************************************
            setup()
 *****************************************/

void setup() {
  // enable console en stuur opstartbericht
  Serial.begin(115200);
  Serial.println("Start Alphabot");

  // zet pinmode 
   {
  pinMode(ECHO, INPUT);    // Define the ultrasonic echo input pin
  pinMode(TRIG, OUTPUT);   // Define the ultrasonic trigger input pin 
  pinMode(PWMA,OUTPUT);                     
  pinMode(AIN2,OUTPUT);      
  pinMode(AIN1,OUTPUT);
  pinMode(PWMB,OUTPUT);       
  pinMode(AIN1,OUTPUT);     
  pinMode(AIN2,OUTPUT); 
  analogWrite(PWMA,Speed);
  analogWrite(PWMB,Speed);
  stop();    
}



/*****************************************
            Loop
 *****************************************/

void loop() {
  // lees sensorwaarden
  knop7 = digitalRead(pin7Knop);
  knop8 = digitalRead(pin8Knop);
  
  // bepaal afstand
  {
  Afstand = AfstandTest();                 //display distance 
  Serial.print("Distance = ");            //print distance
  Serial.print(Distance);       
  Serial.println("cm");  
  
  if(Distance < 10)      //Ultrasonic range ranging 2cm to 400cm
  {
    right();
    //left();
    delay(500);
    stop();     
  }
  else
  {
    forward();    
  }
  delay(250);
}

 

  // bepaal toestand
  if (digitalRead(buttonPin) == HIGH) {
      toestand = START
      Serial.println("Nieuwe toestand: START");
     }
  
   if (toestand == START) {
      toestand = RIJDEN;
      Serial.println("Nieuwe toestand: RIJDEN");
    }
    
  if (toestand == RIJDEN) {
    if (digitalRead(afstandsPin) < 10) {
      toestand = REMMEN;
      Serial.println("Nieuwe toestand: REMMEN");
   }
  }
  
  if (toestand == REMMEN) {
    if (digitalRead (PWMA) == LOW && digitalread (PWMB) == LOW){
    toestand = DRAAIEN;
    Serial.println("Nieuwe toestand: DRAAIEN");
    }
  }
  
  if (toestand == DRAAIEN) {
    if (){
    }
  }

  // bepaal toestand afhankelijk van snelheid
  
  if (toestand == RIJDEN) {
     snelheidR = 128;
     snelheidL = 128;
  }
  
  
  
  if (toestand == KAMIKAZE) {
    
  }
  
  if (toestand == EXCITING) {
    for (int i = 1; i <= 6; i = i + 1) {
      stoplicht(i, ORANJE);
    }
  }
  
  //zet waarden voor actautoren, voor alle toestanden
  analogWrite(pinMotorSnelheidR, snelheidR);
  analogWrite(pinMotorSnelheidL, snelheidL);

  // vertraging om te zorgen dat berichten op de seriele monitor leesbaar blijven
  delay(100);
}



