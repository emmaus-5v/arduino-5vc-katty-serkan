/*****************************************
   Stoplicht Startcode
   met toestansdiagrammen
   Emmauscollege
   v20201114GEE
 *****************************************/

/*****************************************
   variabelen die je gebruikt maken
 *****************************************/
// gebruikte pinnen
#define PWMA   6           //Left Motor Speed pin (ENA)
#define AIN2   A0          //Motor-L forward (IN2).
#define AIN1   A1          //Motor-L backward (IN1)
#define PWMB   5           //Right Motor Speed pin (ENB)
#define BIN1   A2          //Motor-R forward (IN3)
#define BIN2   A3          //Motor-R backward (IN4)
#define ECHO   2
#define TRIG   3

// variabelen voor de toestanden maken
// toestanden:

const int START = 1;
const int EINDE = 2;
const int RIJDEN = 3;
const int STOPPEN = 4;
const int DRAAIEN = 5;

/*****************************************
   functies die je gebruikt maken
 *****************************************/

  }
  if (kleur ==  ROOD) {
    digitalWrite(pinRood  , HIGH);
    digitalWrite(pinOranje, LOW );
    digitalWrite(pinGroen , LOW );
  }
  if (kleur ==  ORANJE) {
    if (welke == 7 || welke == 8) {
      Serial.println("FOUT: Voetgangerslicht kan niet op oranje");
    } else {
      digitalWrite(pinRood  , LOW );
      digitalWrite(pinOranje, HIGH);
      digitalWrite(pinGroen , LOW );
    }
  }
  if (kleur ==  GROEN) {
    digitalWrite(pinRood  , LOW );
    digitalWrite(pinOranje, LOW );
    digitalWrite(pinGroen , HIGH);
  }
}

/*****************************************
   setup() en loop()
 *****************************************/

void setup() {
  // enable console en stuur opstartbericht
  Serial.begin(115200);
  Serial.println("Start Alphabot");

  // zet pinmode 
   {
  pinMode(ECHO, INPUT);    // Define the ultrasonic echo input pin
  pinMode(TRIG, OUTPUT);   // Define the ultrasonic trigger input pin 
  pinMode(PWMA,OUTPUT);                     
  pinMode(AIN2,OUTPUT);      
  pinMode(AIN1,OUTPUT);
  pinMode(PWMB,OUTPUT);       
  pinMode(AIN1,OUTPUT);     
  pinMode(AIN2,OUTPUT); 
  analogWrite(PWMA,Speed);
  analogWrite(PWMB,Speed);
  stop();    
}

//zet begintoestand
toestand = START;

void loop() {
  // lees sensorwaarden
  knop7 = digitalRead(pin7Knop);
  knop8 = digitalRead(pin8Knop);
  
  // bepaal afstand
  {
  Afstand = Distance_test();                 //display distance 
  Serial.print("Distance = ");            //print distance
  Serial.print(Distance);       
  Serial.println("cm");  
  
  if(Distance < 10)      //Ultrasonic range ranging 2cm to 400cm
  {
    right();
    //left();
    delay(500);
    stop();     
  }
  else
  {
    forward();    
  }
  delay(250);
}

int Distance_test()         // Measure the distance 
{
  digitalWrite(TRIG, LOW);   // set trig pin low 2μs
  delayMicroseconds(2);
  digitalWrite(TRIG, HIGH);  // set trig pin 10μs , at last 10us 
  delayMicroseconds(10);
  digitalWrite(TRIG, LOW);    // set trig pin low
  float Fdistance = pulseIn(ECHO, HIGH);  // Read echo pin high level time(us)
  Fdistance= Fdistance/58;       //Y m=（X s*344）/2
  // X s=（ 2*Y m）/344 ==》X s=0.0058*Y m ==》cm = us /58       
  return (int)Fdistance;
}  

  // bepaal toestand
  if (toestand == START) {
    if (digitalRead(buttonPin) == HIGH) {
      toestand = RIJDEN;
      Serial.println("Nieuwe toestand: RIJDEN");
    }

  }
  if (toestand == RIJDEN) {
    if (digitalRead(afstandsPin) < 10) {
      toestand = REMMEN;
      Serial.println("Nieuwe toestand: REMMEN");
   }
  }
  
  if (toestand == REMMEN) {
    if (digitalRead (PWMA) == LOW && digitalread (PWMB) == LOW){
    toestand = DRAAIEN;
    Serial.println("Nieuwe toestand: DRAAIEN");
    }
  }
  
  if (toestand == DRAAIEN) {
    if (){
    }
  }

  // zet stoplichten conform toestand
  if (toestand == BORING) {
    for (int i = 1; i <= 8; i = i + 1) {
      stoplicht(i, ROOD);
    }
  }
  if (toestand == KAMIKAZE) {
    for (int i = 1; i <= 8; i = i + 1) {
      stoplicht(i, GROEN);
    }
  }
  if (toestand == EXCITING) {
    for (int i = 1; i <= 6; i = i + 1) {
      stoplicht(i, ORANJE);
    }
  }

  // vertraging om te zorgen dat berichten op de seriele monitor leesbaar blijven
  delay(100);
}



